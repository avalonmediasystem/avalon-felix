####
# Auxiliary movie and image profile definitions, mostly for the media analysis
# services.
#
# ATTENTION:
#
# Do not change the identifier of the formats below. Media analysis and other 
# services are relying on them.
#
# In order to understand how to configure a format, take a look a the
# documentation below:
#
# profile.<format>.name:
#     Name of the format, used in download dialogs of the frontend.
#
# profile.<format>.output:
#     Type of the distribution format.
#     [audio|visual|audiovisual|stream|enhancedaudio|image|imagesequence|cover|nothing]
#
# profile.<format>.suffix:
#     Extension that will be appended to the download.
#
# profile.<format>.mimetype:
#     Mime type used to provide proper content types.
#
# profile.<format>.input:
#     Track types for which this format is applicable.
#     [audio|visual|audiovisual|stream|enhancedaudio|image|imagesequence|cover|nothing]
##

# Re-encode audiovisual stream with watermark
profile.watermark.branding.name = encode audiovisual track with watermark
profile.watermark.branding.input = stream
profile.watermark.branding.output = audiovisual
profile.watermark.branding.mimetype = video/mpeg2
profile.watermark.branding.suffix = -branding.mpg
profile.watermark.branding.ffmpeg.command = -strict unofficial -i #{in.video.path} -qscale 2 -vcodec mpeg2video -acodec mp2 -vf movie=#{watermark}[wm];[in][wm]overlay=main_w-overlay_w-10:main_h-overlay_h-10[out] #{out.dir}/#{out.name}#{out.suffix}

# Re-encode audiovisual stream without watermark for concatination
profile.prepare-cat.branding.name = encode audiovisual track for concatination
profile.prepare-cat.branding.input = stream
profile.prepare-cat.branding.output = audiovisual
profile.prepare-cat.branding.mimetype = video/mpeg2
profile.prepare-cat.branding.suffix = -branding.mpg
profile.prepare-cat.branding.ffmpeg.command = -strict unofficial -i #{in.video.path} -qscale 2 -vcodec mpeg2video -acodec mp2 #{out.dir}/#{out.name}#{out.suffix}


# Re-encode and resize front-/end-credits stream
profile.credits.branding.name = encode and resize audiovisual front-/end-credits
profile.credits.branding.input = stream
profile.credits.branding.output = audiovisual
profile.credits.branding.mimetype = video/mpeg2
profile.credits.branding.suffix = -credits.mpg
profile.credits.branding.ffmpeg.command = -strict unofficial -i #{in.video.path} -qscale 2 -vcodec mpeg2video -acodec mp2 -s #{credits.width}x#{credits.height} -vf pad=#{credits.size.x}:#{credits.size.y}:#{credits.padding.x}:#{credits.padding.y}: #{out.dir}/#{out.name}#{out.suffix}

# copy files 
profile.copy.branding.name = encode and resize audiovisual front-/end-credits
profile.copy.branding.input = stream
profile.copy.branding.output = audiovisual
profile.copy.branding.suffix = -copy.#{in.video.suffix}
profile.copy.branding.ffmpeg.command = -strict unofficial -i #{in.video.path} -acodec copy -vcodec copy  #{out.dir}/#{out.name}#{out.suffix}
